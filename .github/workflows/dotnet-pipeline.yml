name: BuildAndDeploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  

    env:
      Solution_Name: Ctrl2MqttBridge.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    # Execute all unit tests in the solution
#    - name: Execute unit tests
#      run: dotnet test --configuration ${{ matrix.configuration }}

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Build
      run: dotnet build --configuration ${{ matrix.configuration }}
#      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
#      env:
#        Configuration: ${{ matrix.configuration }}

   

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the nuget package
      run: dotnet pack --configuration ${{ matrix.configuration }}

#    - name: print dir
#      run: dir
#      run: dir src
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Ctrl2MqttBridgeInstaller
        path: src\Ctrl2MqttBridge\Ctrl2MqttBridgeSetup*.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Automated Release by GitHub Action CI
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: src\Ctrl2MqttBridge\Ctrl2MqttBridgeSetup*.exe
        asset_name: Ctrl2MqttBridgeSetup*.exe
        asset_content_type: application/exe


    - name: Push NuGet package to NuGet.org
      env: 
        API_KEY: ${{secrets.NUGET_API_KEY}}
      run: dotnet nuget push src\Ctrl2MqttClient\bin\Release\*.nupkg --api-key "$env:API_KEY" --source https://api.nuget.org/v3/index.json --no-symbols true
